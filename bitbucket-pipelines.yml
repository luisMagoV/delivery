# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
# To create a pipeline app, go to bitbucket -> Repository Settings -> Pipeline -> Deployments
# Add a environment and set a variable
# variable = NAME_APP
# value = Name app equal zip
image: lawiet/ionic-v5:latest

definitions:
  steps:
    - step: &build
        name: Test
        image: lawiet/only-cordova:latest
        caches:
          - plugins
          - platforms
          - gradle
          - node
        script:
          - npm i
          - ng build --prod
          # - cordova-res android
          # - if [[ -d "platforms/android" ]]; then echo ""; else ionic cordova prepare android --confirm; fi
          - VERSION_APP=$(cat version.txt)
          - VERSION_APP=$(perl -e "print (${VERSION_APP} + 0.001)")
          - echo ${VERSION_APP} > version.txt
          - git add version.txt
          - git commit -m "[skip ci] Updating version.txt with latest build number."
          - git push
          - mkdir builds
          - touch builds/info.txt
        artifacts:
          # - plugins/*
          # - platforms/*
          - builds/*
    - step: &compileStaging
        name: Build
        caches:
          - node
          - gradle
        script:
          - unzip -oP $PASSWORD_ZIP "zip/${NAME_APP}.zip"
          - FIREBASE_SDK_APP_ID=$(cat build-config.json | jq -r '.firebase.mobilesdk_app_id')
          - NAME_APP=$(cat build-config.json | jq -r '.firebase.app_name')
          - FIREBASE_APP_ID=$(cat build-config.json | jq -r '.firebase.app_id')
          - FACEBOOK_APP_ID=$(cat build-config.json | jq -r '.facebook.app_id')
          - FACEBOOK_APP_NAME=$(cat build-config.json | jq -r '.facebook.app_name')
          - GOOGLE_REVERSED_CLIENT_ID=$(cat build-config.json | jq -r '.google.reversed_client_id')
          - GOOGLE_WEB_APPLICATION_CLIENT_ID=$(cat build-config.json | jq -r '.google.web_application_client_id')
          - KEYSTORE_ALIAS=$(cat build-config.json | jq -r '.android.release.alias')
          - KEYSTORE_PASSWORD=$(cat build-config.json | jq -r '.android.release.password')
          - KEYSTORE_PATH=$(cat build-config.json | jq -r '.android.release.keystore')
          - VERSION_APP=$(cat version.txt)
          - VERSION_CODE_APP==$(perl -e "print (${VERSION_APP} * 1000)")
          - oStrVersionName='versionName ".*"'
          - rStrVersionName='versionName "'${VERSION_APP}'"'
          - oStrVersionCode='versionCode .*'
          - rStrVersionCode='versionCode '${VERSION_CODE_APP}''
          - oStrFCMP='public class'
          - rStrFCMP='import com.getcapacitor.community.fcm.FCMPlugin;\npublic class'
          - oStrFCMA='}});'
          - rStrFCMA='add(FCMPlugin.class);\n}});'
          - oStrFB='</resources>'
          - rStrFB='    <string name="fb_app_id">'${FACEBOOK_APP_ID}'</string>\n    <string name="fb_app_name">'${FACEBOOK_APP_NAME}'</string>\n    <string name="fb_login_protocol_scheme">fb'${FACEBOOK_APP_ID}'</string>\n    <bool name="fb_hybrid_app_events">false</bool>\n</resources>'
          - npm i
          - ng build --prod
          # - npx jetify
          - npx cap init "${NAME_APP}" "${FIREBASE_APP_ID}"
          - npx cap add android
          - cordova-res android
          - cordova-res android --skip-config --copy
          - cp ${KEYSTORE_PATH} android/app/release.key
          - cp ${KEYSTORE_PATH} android/release.key
          - cp google-services.json android/app
          - cp resources/android/xml/network_security_config.xml android/app/src/main/res/xml/
          - sed -i "s~$oStrVersionName~$rStrVersionName~" android/app/build.gradle
          - sed -i "s~$oStrVersionCode~$rStrVersionCode~" android/app/build.gradle
          - sed -i "s~$oStrFB~$rStrFB~" android/app/src/main/res/values/strings.xml
          - sed -i "s~$oStrFB~$rStrFB~" android/capacitor-cordova-android-plugins/src/main/res/values/facebookconnect.xml
          - sed -i 's/android:supportsRtl="true"/android:supportsRtl="true"\n        android:usesCleartextTraffic="true"\n        android:networkSecurityConfig="@xml\/network_security_config"/gm' android/app/src/main/AndroidManifest.xml
          # - echo -e '<?xml version="1.0" encoding="utf-8"?>\n<resources>\n    <color name="accent">#FF00FFFF</color>\n</resources>' >> android/app/src/main/res/values/colors.xml
          - find ./android/app/src/main/java -type f -name "MainActivity.java" -exec sed -i "s~$oStrFCMP~$rStrFCMP~" {} \;
          - find ./android/app/src/main/java -type f -name "MainActivity.java" -exec sed -i "s~$oStrFCMA~$rStrFCMA~" {} \;
          - cd android
          - ./gradlew assembleRelease -Pandroid.injected.signing.store.file=release.key -Pandroid.injected.signing.store.password=${KEYSTORE_PASSWORD} -Pandroid.injected.signing.key.alias=${KEYSTORE_ALIAS} -Pandroid.injected.signing.key.password=${KEYSTORE_PASSWORD}
          - cd ..
          - find ./android/app/build -name "app-release.apk" -exec mv {} "builds/${NAME_APP}.apk" \;
          - rm "builds/info.txt"
          - firebase appdistribution:distribute "builds/${NAME_APP}.apk" --release-notes "TESTING CLI ${NAME_APP}" --token ${FIREBASE_TOKEN_CI} --app ${FIREBASE_SDK_APP_ID} --groups "developers, testers, clients" --non-interactive
        artifacts:
          - builds/**
    - step: &compile
        name: Build and test
        caches:
          - node
          - gradle
        script:
          - unzip -oP $PASSWORD_ZIP "zip/${NAME_APP}.zip"
          - FIREBASE_SDK_APP_ID=$(cat build-config.json | jq -r '.firebase.mobilesdk_app_id')
          - NAME_APP=$(cat build-config.json | jq -r '.firebase.app_name')
          - FIREBASE_APP_ID=$(cat build-config.json | jq -r '.firebase.app_id')
          - FACEBOOK_APP_ID=$(cat build-config.json | jq -r '.facebook.app_id')
          - FACEBOOK_APP_NAME=$(cat build-config.json | jq -r '.facebook.app_name')
          - GOOGLE_REVERSED_CLIENT_ID=$(cat build-config.json | jq -r '.google.reversed_client_id')
          - GOOGLE_WEB_APPLICATION_CLIENT_ID=$(cat build-config.json | jq -r '.google.web_application_client_id')
          - KEYSTORE_ALIAS=$(cat build-config.json | jq -r '.android.release.alias')
          - KEYSTORE_PASSWORD=$(cat build-config.json | jq -r '.android.release.password')
          - KEYSTORE_PATH=$(cat build-config.json | jq -r '.android.release.keystore')
          - VERSION_APP=$(cat version.txt)
          - VERSION_CODE_APP==$(perl -e "print (${VERSION_APP} * 1000)")
          - oStrVersionName='versionName ".*"'
          - rStrVersionName='versionName "'${VERSION_APP}'"'
          - oStrVersionCode='versionCode .*'
          - rStrVersionCode='versionCode '${VERSION_CODE_APP}''
          - oStrFB='</resources>'
          - rStrFB='    <string name="fb_app_id">'${FACEBOOK_APP_ID}'</string>\n    <string name="fb_app_name">'${FACEBOOK_APP_NAME}'</string>\n    <string name="fb_login_protocol_scheme">fb'${FACEBOOK_APP_ID}'</string>\n    <bool name="fb_hybrid_app_events">false</bool>\n</resources>'
          - npm i
          - ng build --prod
          # - npx jetify
          - npx cap init "${NAME_APP}" "${FIREBASE_APP_ID}"
          - npx cap add android
          - cordova-res android
          - cordova-res android --skip-config --copy
          - cp ${KEYSTORE_PATH} android/app/release.key
          - cp ${KEYSTORE_PATH} android/release.key
          - cp google-services.json android/app
          - cp resources/android/xml/network_security_config.xml android/app/src/main/res/xml/
          - sed -i "s~$oStrVersionName~$rStrVersionName~" android/app/build.gradle
          - sed -i "s~$oStrVersionCode~$rStrVersionCode~" android/app/build.gradle
          - sed -i "s~$oStrFB~$rStrFB~" android/app/src/main/res/values/strings.xml
          - sed -i "s~$oStrFB~$rStrFB~" android/capacitor-cordova-android-plugins/src/main/res/values/facebookconnect.xml
          - sed -i 's/android:supportsRtl="true"/android:supportsRtl="true"\n        android:usesCleartextTraffic="true"\n        android:networkSecurityConfig="@xml\/network_security_config"/gm' android/app/src/main/AndroidManifest.xml
          # - echo -e '<?xml version="1.0" encoding="utf-8"?>\n<resources>\n    <color name="accent">#FF00FFFF</color>\n</resources>' >> android/app/src/main/res/values/colors.xml
          - cd android
          - ./gradlew assembleRelease -Pandroid.injected.signing.store.file=release.key -Pandroid.injected.signing.store.password=${KEYSTORE_PASSWORD} -Pandroid.injected.signing.key.alias=${KEYSTORE_ALIAS} -Pandroid.injected.signing.key.password=${KEYSTORE_PASSWORD}
          - cd ..
          - find ./android/app/build -name "app-release.apk" -exec mv {} "builds/${NAME_APP}.apk" \;
          - rm "builds/info.txt"
        artifacts:
          - builds/**
  caches:
    plugins: plugins
    platforms: platforms

pipelines:
  branches:
    togo-staging:
      - step:
          <<: *build
      - parallel:
          - step:
              <<: *compileStaging
              name: ToGo
              deployment: ToGo
    togo-master:
      - step:
          <<: *build
      - parallel:
          - step:
              <<: *compile
              name: ToGo
              deployment: ToGo
